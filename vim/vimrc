" Gui Configuration
if has("gui_running")
  set number
  set guifont=Monaco:h13
  set guioptions=egmrLt
end

" Remove spaces at the end of the line
function! ClearEOLSpaces()
  :silent! %s/^\s\+$//
  :silent! %s/\s\+$//
endfunction

" Replace hard tabs with soft tabs
function! FixTabs()
  :silent! %retab
endfunction

let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1

filetype plugin indent on  " Automatically detect file types.
let mapleader = ","
syntax enable
colorscheme vividchalk
set autoindent
set autowrite  " Writes on make/shell commands
set backspace=start,indent
set clipboard=unnamed
set expandtab
set formatoptions=tcqr
set hidden
set history=256  " Number of things to remember in history.
set hlsearch
set ignorecase
set laststatus=2  " Always show status line.
set modifiable
set nocompatible  " We don't want vi compatibility.
set nocp incsearch
set noerrorbells  " No noise.
set novisualbell  " No blinking .
set pastetoggle=<F6>
set ruler  " Ruler on
set scrolloff=3
set smartcase
set smarttab
set timeoutlen=200  " Time to wait after ESC (default causes an annoying delay)
set wildmode=longest,list
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Python
autocmd filetype python set smartindent cinwords=if,elif,else,for,while,with,try,except,finally,def,class

" Ruby
autocmd filetype ruby set tabstop=2 expandtab shiftwidth=2 softtabstop=2

" Shortcuts
cab Q quit
cab W write
cab Wq wq
map ,c :cd %:p:h<CR>
nmap <expr> <Leader>e ':e ' . expand('%:p:h')
map <Leader><Space> :call ClearEOLSpaces()<CR>
map <Leader><Tab> :call FixTabs()<CR>

" FuzzyFinder
let g:fuf_file_exclude = '\v\~$|\.(o|exe|dll|bak|swp|class|tar|gz)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])'
nnoremap <Leader>f     :FufMruFile **/<CR>
let g:fuf_modesDisable = [ 'mrucmd', ]

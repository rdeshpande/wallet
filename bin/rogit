#!/usr/bin/env ruby

# Rohan's Git Helpers
# Useful Git wrappers when working on a large project

module RoGit

  def push
    pull
    spec_output = system('rake spec')
    if spec_output['0 Failures']
      system('git push origin')
    end
  end
  alias :ps :push

  def pull
    if have_changes?
      puts "Stashing, pulling, then stash-applying for #{current_branch}.."
      system('git stash save')
      system('git pull --rebase origin')
      system('git stash pop')
      system('rake spec:setup')
    else
      system('git pull --rebase origin')
    end
  end
  alias :pl :pull

  private
    def current_branch
      `git branch | grep '*' | cut -d' ' -f2`.strip
    end

    def have_changes?
      !`git diff origin/#{current_branch}`.strip.empty?
    end

end

include RoGit
arg = ARGV[0]
RoGit.send(arg.strip)
